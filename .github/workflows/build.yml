name: CICD
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The "build" job
  build-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set server host
        run: |
          sed -i 's/ALLOWED_HOSTS = \[\]/ALLOWED_HOSTS = ['${{ secrets.GCP_PY_BOT_HOST }}']/g' $GITHUB_WORKSPACE/storefront/settings.py

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Docker Image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: dimonpc2010/pydjangolearning:latest
          cache-from: type=registry,ref=dimonpc2010/pydjangolearning:latest
          cache-to: type=inline

      - name: Deploy Image
        run: echo ${{ steps.docker_build.outputs.digest }}

  # The "deploy" job
  deploy:
    runs-on: ubuntu-latest
    needs: [build-docker]
    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }} # Only run this workflow if it is master branch on push event
    steps:
      - uses: actions/checkout@v2

      # Deploy to server
      - name: multiple command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_PY_BOT_HOST }}
          username: ${{ secrets.GCP_PY_BOT_USERNAME }}
          key: ${{ secrets.GCP_PY_BOT_SSH_KEY }}
          port: ${{ secrets.GCP_PY_BOT_SSH_PORT }}
          script: |
            docker stop pydjangolearning || true && docker rmi dimonpc2010/pydjangolearning
            docker pull dimonpc2010/pydjangolearning:latest
            docker run -d --rm --name pydjangolearning -p 9000:9000 dimonpc2010/pydjangolearning